<?php
# Enable Error Reporting and Display:
error_reporting(~0);
ini_set('display_errors', 1);

$getUrlParameters = get_query_string();
echo $getUrlParameters;
$urlStaticApiUrl = 'http://api.tvmaze.com/search/shows?q='.$getUrlParameters;

/*$url = ('http://api.tvmaze.com/search/shows?q=flash');*/

$json = file_get_contents($urlStaticApiUrl);

$retValue = json_decode($json, TRUE);

for ($x = 0; $x < count($retValue); $x++) {
    $arrayName[$x] = $retValue[$x]['show']['name'];
    $arrayScore[$x] = $retValue[$x]['score'];

    $arrayTotal["name"] = $arrayName;
    $arrayTotal["score"] = $arrayScore;
}

//Counter for score loop
$counter = 0;

//Array to filter non type get values
foreach ($arrayTotal['name'] as $valueName) {
    $valueBack = foundStringCaseInsensitive($valueName, $_GET['q']);
    if ($valueBack != null) {
        $finalArrayName[$valueName] = $valueBack;
        $finalArrayScore[$valueName] = $arrayTotal['score'][$counter];
        echo " Name: ".$finalArrayName[$valueName]." - Score: ".$finalArrayScore[$valueName];
        echo "<br/>";
    }
    $counter++;
}

function foundStringCaseInsensitive($fullString, $searchString)
{
    $positionFound = strripos($fullString, $searchString);
    if (is_int($positionFound)) {
        return $fullString;
    }
}

function get_query_string(){
    $letra = explode("=",$_SERVER['QUERY_STRING']);
    $arr = explode("&",$_SERVER['QUERY_STRING']);

    if (count($arr) > 1 OR $letra[0] != 'q'){
        echo "invalid response";
        exit;
    }else{
/*        return end($arr)."<br>";*/
    return $_GET['q'];
    }

}